setwd("~/Downloads")
readxl::read_excel("Data Scientist - Intern - zadanie")
xd<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx")
View(xd)
xd<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 2)
xd<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 1)
dane<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 2)
View(xd)
View(dane)
library(mlr)
regr_task = makeRegrTask(id = "task", data = dane, target = "Sztuk_sprzedanych_pierwsze_30_dni")
names(dane)
names(dane)<-names(dane)
View(dane)
regr_task = makeRegrTask(id = "task", data = dane, target = "Sztuk_sprzedanych_pierwsze_30_dni")
names(dane)
regr_task = makeRegrTask(id = "task", data = dane[1:4], target = "Sztuk_sprzedanych_pierwsze_30_dni")
make.names(names(df))
?make.names
make.names(names(df))
make.names(names(df)[1:4])
make.names(names(df)[1])
names(df)
View(dane)
xd<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 1)
dane<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 2)
names(dane)
make.names(names(df))
make.names(names(df),allow_ = FALSE)
make.names(names(df),allow_ = TRUE)
names(dane)
colnames(dane)
colnames(dane)<-colnames(dane)
make.names(names(df),allow_ = TRUE)
colnames(dane)
make.names(names(df),allow_ = TRUE)
make.names(names(df),allow_ = FALSE)
make.names(colnames(df),allow_ = FALSE)
colnames(df)[1:3]
colnames(df)[1]
colnames(df)
colnames(dane)
make.names(colnames(dane),allow_ = FALSE)
colnames(dane)<-make.names(colnames(dane),allow_ = FALSE)
regr_task = makeRegrTask(id = "task", data = dane, target = "Sztuk_sprzedanych_pierwsze_30_dni")
regr_task = makeRegrTask(id = "task", data = dane, target = "Sztuk.sprzedanych.pierwsze.30.dni")
dane[sapply(dane, is.character)] <- lapply(dane[sapply(dane, is.character)],as.factor)
regr_task = makeRegrTask(id = "task", data = dane, target = "Sztuk.sprzedanych.pierwsze.30.dni")
View(dane)
?makeRegrTask()
dane$Data.wystawienia.aukcji
as.numeric(dane$Data.wystawienia.aukcji)
as.numeric(dane$Data.wystawienia.aukcji)-min(as.numeric(dane$Data.wystawienia.aukcji))/(
max(as.numeric(dane$Data.wystawienia.aukcji))-min(as.numeric(dane$Data.wystawienia.aukcji))
)
as.numeric(dane$Data.wystawienia.aukcji)-min(as.numeric(dane$Data.wystawienia.aukcji))
(
max(as.numeric(dane$Data.wystawienia.aukcji))-min(as.numeric(dane$Data.wystawienia.aukcji))
)
max(as.numeric(dane$Data.wystawienia.aukcji))-min(as.numeric(dane$Data.wystawienia.aukcji))
as.numeric(dane$Data.wystawienia.aukcji)-min(as.numeric(dane$Data.wystawienia.aukcji))/(
max(as.numeric(dane$Data.wystawienia.aukcji))-min(as.numeric(dane$Data.wystawienia.aukcji))
)
test<-c(1:10)
(as.numeric(dane$Data.wystawienia.aukcji)-min(as.numeric(dane$Data.wystawienia.aukcji)))/(
max(as.numeric(dane$Data.wystawienia.aukcji))-min(as.numeric(dane$Data.wystawienia.aukcji))
)
dane$Data.wystawienia.aukcji<-(as.numeric(dane$Data.wystawienia.aukcji)-min(as.numeric(dane$Data.wystawienia.aukcji)))/(
max(as.numeric(dane$Data.wystawienia.aukcji))-min(as.numeric(dane$Data.wystawienia.aukcji))
)
regr_task = makeRegrTask(id = "task", data = dane, target = "Sztuk.sprzedanych.pierwsze.30.dni")
regr_lrn = makeLearner("regr.gbm", par.vals = list(n.trees = 500, interaction.depth = 3))
#:# audit
cv <- makeResampleDesc("CV", iters = 5)
r <- resample(regr_lrn, regr_task, cv, measures = list(mse, rmse, mae, rsq))
warnings()
regr_task = makeRegrTask(id = "task", data = dane, target = "Sztuk.sprzedanych.pierwsze.30.dni")
regr_lrn = makeLearner("regr.lm", par.vals = list(n.trees = 500, interaction.depth = 3))
moz<-listLearners(properties = "regresion")
moz<-listLearners()
View(moz)
moz[moz$type=="regr"]
moz[moz$type=="regr",]
moz<-moz[moz$type=="regr",]
View(moz)
moz<-listLearners(check.packages = TRUE)
moz<-moz[moz$type=="regr",]
View(moz)
regr_lrn = makeLearner("regr.lm")
#:# audit
cv <- makeResampleDesc("CV", iters = 5)
r <- resample(regr_lrn, regr_task, cv, measures = list(mse, rmse, mae, rsq))
set.seed(123)
library(dplyr)
dane<-sample_frac(dane)
regr_task = makeRegrTask(id = "task", data = dane, target = "Sztuk.sprzedanych.pierwsze.30.dni")
regr_lrn = makeLearner("regr.lm")
moz<-listLearners(check.packages = TRUE)
moz<-moz[moz$type=="regr",]
#:# audit
cv <- makeResampleDesc("CV", iters = 5)
r <- resample(regr_lrn, regr_task, cv, measures = list(mse, rmse, mae, rsq))
View(dane)
dane <- dane[ - as.numeric(which(apply(dane, 2, var) == 0))]
warnings()
View(dane)
xd<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 1)
dane<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 2)
set.seed(123)
library(mlr)
library(dplyr)
colnames(dane)
colnames(dane)<-make.names(colnames(dane),allow_ = FALSE)
apply(dane, 2, function(x){all(x==x[1])})
todelete<-apply(dane, 2, function(x){all(x==x[1])})
dane <- dane[!delete ]
dane <- dane[!todelete ]
dane[sapply(dane, is.character)] <- lapply(dane[sapply(dane, is.character)],as.factor)
dane$Data.wystawienia.aukcji<-(as.numeric(dane$Data.wystawienia.aukcji)-min(as.numeric(dane$Data.wystawienia.aukcji)))/(
max(as.numeric(dane$Data.wystawienia.aukcji))-min(as.numeric(dane$Data.wystawienia.aukcji))
)
dane<-sample_frac(dane)
regr_task = makeRegrTask(id = "task", data = dane, target = "Sztuk.sprzedanych.pierwsze.30.dni")
regr_lrn = makeLearner("regr.lm")
moz<-listLearners(check.packages = TRUE)
moz<-moz[moz$type=="regr",]
#:# audit
cv <- makeResampleDesc("CV", iters = 5)
r <- resample(regr_lrn, regr_task, cv, measures = list(mse, rmse, mae, rsq))
unique(dane$Marka)
View(dane)
unique(dane$Model)
View(dane)
dane<-select(dane,-Model)
var(dane$hli.30)
xd<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 1)
dane<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 2)
set.seed(123)
library(mlr)
library(dplyr)
moz<-listLearners(check.packages = TRUE)
moz<-moz[moz$type=="regr",]
colnames(dane)
colnames(dane)<-make.names(colnames(dane),allow_ = FALSE)
todelete<-apply(dane, 2, function(x){all(x==x[1])})
dane <- dane[!todelete ]
dane<-select(dane,-Model)
dane[sapply(dane, is.character)] <- lapply(dane[sapply(dane, is.character)],as.factor)
dane<-dane[-18,]
View(dane)
xd<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 1)
dane<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 2)
set.seed(123)
library(mlr)
library(dplyr)
moz<-listLearners(check.packages = TRUE)
moz<-moz[moz$type=="regr",]
colnames(dane)
colnames(dane)<-make.names(colnames(dane),allow_ = FALSE)
todelete<-apply(dane, 2, function(x){all(x==x[1])})
dane <- dane[!todelete ]
dane<-select(dane,-Model)
dane[10:29]
dane[15:29]
dane[20:29]
dane[20:28]
dane[20:30]
dane[20:29]
dane[20:29]<-as.numeric(dane[20:29])
dane[20:29]<-apply(dane[20:29],2,function(x){ as.numeric(x)})
library(tidyr)
dane<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 2)
set.seed(123)
library(mlr)
library(dplyr)
library(tidyr)
moz<-listLearners(check.packages = TRUE)
moz<-moz[moz$type=="regr",]
colnames(dane)
colnames(dane)<-make.names(colnames(dane),allow_ = FALSE)
dane<-tidyr::drop_na(dane)
View(dane)
dane[21,26]
dane[21,25]
View(dane)
which(is.na(dane$mp.dpg))
dane$mp.dpg
dane<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 2)
moz<-listLearners(check.packages = TRUE,quiet = TRUE)
moz<-listLearners(check.packages = TRUE,quiet = TRUE,warn.missing.packages = FALSE)
moz<-moz[moz$type=="regr",]
colnames(dane)
colnames(dane)<-make.names(colnames(dane),allow_ = FALSE)
todelete<-apply(dane, 2, function(x){all(x==x[1])})
dane <- dane[!todelete ]
dane<-select(dane,-Model)
dane[20:29]<-apply(dane[20:29],2,function(x){ as.numeric(x)})
dane<-tidyr::drop_na(dane)
dane[sapply(dane, is.character)] <- lapply(dane[sapply(dane, is.character)],as.factor)
View(dane)
dane$Data.wystawienia.aukcji<-(as.numeric(dane$Data.wystawienia.aukcji)-min(as.numeric(dane$Data.wystawienia.aukcji)))/(
max(as.numeric(dane$Data.wystawienia.aukcji))-min(as.numeric(dane$Data.wystawienia.aukcji))
)
dane<-sample_frac(dane)
dane<-dane[-1]
regr_task = makeRegrTask(id = "task", data = dane, target = "Sztuk.sprzedanych.pierwsze.30.dni")
regr_lrn = makeLearner("regr.lm")
moz<-listLearners(check.packages = TRUE)
moz<-moz[moz$type=="regr",]
#:# audit
cv <- makeResampleDesc("CV", iters = 5)
r <- resample(regr_lrn, regr_task, cv, measures = list(mse, rmse, mae, rsq))
r$aggr
sum(dane$hli.30)
regr_lrn = makeLearner("regr.rpart")
#:# audit
cv <- makeResampleDesc("CV", iters = 5)
r <- resample(regr_lrn, regr_task, cv, measures = list(mse, rmse, mae, rsq))
r$aggr
library(DataExplorer)
DataExplorer::plot_correlation(dane)
DataExplorer::plot_histogram(dane)
sum(dane$mp.dpg)
sum(dane$ILE.AUKCJI.Z.WYZSZA.CENA.W.DNIU.DEBIUTU.FIRMA)
DataExplorer::plot_density(dane)
sum(mp.hill)
sum(dane$mp.hill)
sum(dane$mp.hli)
dane<-drop_columns(dane, "mp.hli")
DataExplorer::create_report(dane)
DataExplorer::plot_qq(dane)
regr_task = makeRegrTask(id = "task", data = dane, target = "Sztuk.sprzedanych.pierwsze.30.dni")
regr_lrn = makeLearner("regr.rpart")
#:# audit
cv <- makeResampleDesc("CV", iters = 3)
r <- resample(regr_lrn, regr_task, cv, measures = list(mse, rmse, mae, rsq))
r$aggr
dane$bgn.30<-dane$bgn.30^2
r <- resample(regr_lrn, regr_task, cv, measures = list(mse, rmse, mae, rsq))
r$aggr
dane$bgn.30<-dane$bgn.30^(1/2)
dane$bgn.30<-dane$bgn.30^(1/2)
r <- resample(regr_lrn, regr_task, cv, measures = list(mse, rmse, mae, rsq))
r$aggr
xd<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 1)
dane<-readxl::read_excel("Data Scientist - Intern - zadanie.xlsx",sheet = 2)
set.seed(123)
library(mlr)
library(dplyr)
library(tidyr)
library(DataExplorer)
moz<-listLearners(check.packages = TRUE,quiet = TRUE,warn.missing.packages = FALSE)
moz<-moz[moz$type=="regr",]
colnames(dane)
colnames(dane)<-make.names(colnames(dane),allow_ = FALSE)
todelete<-apply(dane, 2, function(x){all(x==x[1])})
dane <- dane[!todelete ]
dane<-select(dane,-Model)
dane[20:29]<-apply(dane[20:29],2,function(x){ as.numeric(x)})
dane<-tidyr::drop_na(dane)
dane[sapply(dane, is.character)] <- lapply(dane[sapply(dane, is.character)],as.factor)
dane$Data.wystawienia.aukcji<-(as.numeric(dane$Data.wystawienia.aukcji)-min(as.numeric(dane$Data.wystawienia.aukcji)))/(
max(as.numeric(dane$Data.wystawienia.aukcji))-min(as.numeric(dane$Data.wystawienia.aukcji))
)
dane<-sample_frac(dane)
dane<-dane[-1]
DataExplorer::plot_histogram(dane)
DataExplorer::plot_density(dane)
#DataExplorer::create_report(dane)
DataExplorer::plot_qq(dane)
regr_task = makeRegrTask(id = "task", data = dane, target = "Sztuk.sprzedanych.pierwsze.30.dni")
regr_lrn = makeLearner("regr.rpart")
#:# audit
cv <- makeResampleDesc("CV", iters = 3)
r1 <- resample(regr_lrn, regr_task, cv, measures = list(mse, rmse, mae, rsq))
r1$aggr
r2 <- resample(regr_lrn, regr_task, cv, measures = list(mse, rmse, mae, rsq))
r2$aggr
r1 <- resample(regr_lrn, regr_task, cv, measures = list(mse, rmse, mae, rsq))
r1$aggr
r1 <- resample(regr_lrn, regr_task, cv, measures = list(mse, rmse, mae, rsq))
r1$aggr
?resample
dane<-drop_columns(dane,c("dpg.30","hli.30","Data.wystawienia.aukcji"))
r2 <- resample(regr_lrn, regr_task, cv, measures = list(mse, rmse, mae, rsq))
r2$aggr
r1$aggr
setwd("~/Desktop/WUM_projekt1")
